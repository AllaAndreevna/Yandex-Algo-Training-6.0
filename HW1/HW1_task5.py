def solution(data):
    maximum = float("-inf")
    ans1, ans2 = 0, 0
    for i in range(1, len(data)):
        for j in range(i + 1, len(data)):
            if data[i] * data[j] > maximum:
                maximum = data[i] * data[j]
                ans1, ans2 = min(data[i], data[j]), max(data[i], data[j])
    return ans1, ans2

test_cases = [
    ([5, 5, 4, 3, 2, 1], (5, 5)),  # 5 * 5 = 25
    ([4, 6, 1, 2, 10], (6, 10)),   # 6 * 10 = 60
    ([5, 1, 1, 6, 6, 2], (6, 6)),   # 6 * 6 = 36
    ([5, -5, 5, -50, 1, 2], (5, 5)), # 5 * 5 = 25
    ([5, -1, -2, -3, -4, -5], (-1, -1)), # -1 * -1 = 1
    ([5, -1, -1, -1, -1, -1], (-1, -1)), # -1 * -1 = 1
    ([5, 20, 30, 2, 3, 4], (20, 30)), # 20 * 30 = 600
    ([5, 2, 3, 4, 50, 60], (50, 60)), # 50 * 60 = 3000
    ([5, -100, 1, 2, -5, -50], (-100, -50)), # -100 * -50 = 5000
    ([5, 0, -5, 1, 1, 1], (1, 1)), # 1 * 1 = 1
    ([2, 0, 0], (0, 0)), # 0 * 0 = 0
    ([2, -5, 6], (-5, 6)), # -5 * 6 = -30
    ([3, -5, 0, 7], (0, 7)), # 0 * 7 = 0
    ([3, 0, 5, 10], (5, 10)), # 5 * 10 = 50
    ([3, 2, 5, 7], (5, 7)), # 5 * 7 = 35
    ([3, -10, -20, 0], (-10, -20)), # -10 * -20 = 200
    ([4, 2, 4, -2, -4], (2, 4)), # 2 * 4 = 8
]

for test in test_cases:
    data, expected = test
    result = solution(data)
    print(f"Input: {data} -> Output: {result} (Expected: {expected}) -> {'Pass' if result == expected else 'Fail'}")





# 9
# 2 -100 100
# 9 91 -91 7 6 -2 -10 0 -45 91
# 10 -1 -91 100 23 0 80 17 -1 80 -91
# 5 3 3 3 3 3
# 9 -2 -3 1 1 1 -1 1 1 2
# 2 0 5
# 3 -1 3 7
# 6 8 -100 0 -3 -100 99
# 2 2 -9